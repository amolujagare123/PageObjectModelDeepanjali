package Regression.clients;

import com.invoiceplane.pages.Login;
import com.invoiceplane.pages.Menus;
import com.invoiceplane.pages.clients.AddClient;
import com.invoiceplane.utilities.Driver;
import org.apache.poi.hssf.usermodel.HSSFCell;
import org.apache.poi.hssf.usermodel.HSSFRow;
import org.apache.poi.hssf.usermodel.HSSFSheet;
import org.apache.poi.hssf.usermodel.HSSFWorkbook;
import org.apache.poi.ss.usermodel.CellType;
import org.openqa.selenium.WebDriver;
import org.testng.annotations.BeforeClass;
import org.testng.annotations.DataProvider;
import org.testng.annotations.Test;

import java.io.FileInputStream;
import java.io.IOException;
import java.util.ResourceBundle;

/**
 * Created by amolpc on 7/15/2018.
 */
public class AddClientTest
{
    WebDriver driver= Driver.getDriver(Driver.DriverTypes.CHROME);

    @BeforeClass
    public void logintest()
    {
        ResourceBundle rb= ResourceBundle.getBundle("InvoicePlane");
        String urlStr=rb.getString("url");
        driver.get(urlStr);

        Login login=new Login(driver);

        login.setTxtEmail("amolujagare@gmail.com");
        login.setTxtPassword("admin123");
        login.clickLogin();
    }

    @Test(dataProvider="getData")
    public void addClienTest(String clientname,String streetaddr,String city,String state,String zipcode,String phone, String mobile,String email,String web,String vatid,String taxcd)
    {
        Menus mnu=new Menus(driver);
        mnu.clickAddClients();

        AddClient ac= new AddClient(driver);
        /*ac.setClientName("DD Pvt Ltd");
        ac.setStreetAddr("Katraj");
        ac.setCity("Pune");
        ac.setState("Maharashtra");
        ac.setZipCode("1245");
        ac.setPhone("012-125");
        ac.setMobile("1326459870");
        ac.setEmail("dd@gmail.com");
        ac.setWeb("www.dd.com");
        ac.setVatID("v45789");
        ac.setTaxCd("gst012");
        ac.clickSave();*/

        ac.setClientName(clientname);
        ac.setStreetAddr(streetaddr);
        ac.setCity(city);
        ac.setState(state);
        ac.setZipCode(zipcode);
        ac.setPhone(phone);
        ac.setMobile(mobile);
        ac.setEmail(email);
        ac.setWeb(web);
        ac.setVatID(vatid);
        ac.setTaxCd(taxcd);
        ac.clickSave();
    }

    @DataProvider
    public Object[][] getData() throws IOException
    {

        //Rows - Number of times your test has to be repeated.
        //Columns - Number of parameters in test data.
        FileInputStream fileInputStream = new FileInputStream("Data3/AddClientDataProvider.xls");

        HSSFWorkbook workbook = new HSSFWorkbook(fileInputStream); // converts excel into workbook
        HSSFSheet worksheet = workbook.getSheet("Sheet1"); //in workbook  refer sheet

        int rowCount= worksheet.getPhysicalNumberOfRows(); // counting actual no.of rows in sheet

        Object[][] data = new Object[rowCount-1][11];

        for(int i=1;i<rowCount;i++)
        {
            HSSFRow row = worksheet.getRow(i);

            HSSFCell clientname = row.getCell(0);
            if (clientname == null)
                data[i-1][0] = "";
            else {
                clientname.setCellType(CellType.STRING);
                data[i-1][0] = clientname.getStringCellValue();
            }
            HSSFCell streetaddr = row.getCell(1);
            if (streetaddr == null)
                data[i-1][1] = "";
            else {
                streetaddr.setCellType(CellType.STRING);
                data[i-1][1] = streetaddr.getStringCellValue();
            }

            HSSFCell city = row.getCell(2);
            if (city == null)
                data[i-1][2] = "";
            else
            {
                city.setCellType(CellType.STRING);
                data[i-1][2] = city.getStringCellValue();
            }
            HSSFCell state = row.getCell(3);
            if (state == null)
                data[i-1][3] = "";
            else
            {
                state.setCellType(CellType.STRING);
                data[i-1][3] = state.getStringCellValue();
            }
            HSSFCell zipcode = row.getCell(4);
            if (zipcode == null)
                data[i-1][4] = "";
            else
            {
                zipcode.setCellType(CellType.STRING);
                data[i-1][4] = zipcode.getStringCellValue();
            }
            HSSFCell phone = row.getCell(5);
            if (phone == null)
                data[i-1][5] = "";
            else
            {
                phone.setCellType(CellType.STRING);
                data[i-1][5] = phone.getStringCellValue();
            }
            HSSFCell mobile = row.getCell(6);
            if (mobile == null)
                data[i-1][6] = "";
            else
            {
                mobile.setCellType(CellType.STRING);
                data[i-1][6] = mobile.getStringCellValue();
            }
            HSSFCell email = row.getCell(7);
            if (email == null)
                data[i-1][7] = "";
            else
            {
                email.setCellType(CellType.STRING);
                data[i-1][7] = mobile.getStringCellValue();
            }
            HSSFCell web = row.getCell(8);
            if (web == null)
                data[i-1][8] = "";
            else
            {
                web.setCellType(CellType.STRING);
                data[i-1][8] = web.getStringCellValue();
            }
            HSSFCell vatid = row.getCell(9);
            if (vatid == null)
                data[i-1][9] = "";
            else
            {
                vatid.setCellType(CellType.STRING);
                data[i-1][9] = mobile.getStringCellValue();
            }
            HSSFCell taxcd = row.getCell(10);
            if (taxcd == null)
                data[i-1][10] = "";
            else
            {
                taxcd.setCellType(CellType.STRING);
                data[i-1][10] = taxcd.getStringCellValue();
            }
        }
        return data;
    }
}
